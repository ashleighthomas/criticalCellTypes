This program identifies the critical cell types for an inputted set of module genes and a set of RNA-seq data (particularly single cell RNA-seq data for this project). 
Currently this is using a dataset that has cell types pre-defined, but in the future simulated annealing will be implemented to find the optimal set of critical cell types that maximizes the objective function that is implemented in this program.


How to run this program:
Arguments must be in the following order:
argument 1: moduleGenes: list of module genes of interest, 1 per line (m1ExtASDPlusID.txt, m2ExtendedASDwithID.txt, and polio7AGenes.txt all are examples of such files)
argument 2: umiCountFile: file where the 1st line is a filepath location where the UMI count files are stored, and each subsequent line is the name of each of the UMI count files on its own line; an example is umiInputFile.txt
argument 3: distanceMatrix: distance matrix file generated by Seurat; an example of the first 10 lines of such a file is miniSeuratOutput.csv
argument 4: outputFile: output file name you wish to be created
argument 5: fileModifier: this is a unique identifier for each run (only important for them to be different when you are using coexpression data because it is reading in the data in chunks), this is often used as a file modifier (so if I am running module 1 I might use M1)
argument 6: comparison: 1 indicates that you want a ranked UMI counts z-scored per cell type per gene that can be helpful for heatmap creation. Anything else indicates that you want normal output (i.e. 1 floating point value per cell type)

An example of how to run this program:
python3 objectiveFunction.py moduleGenes.txt coexpressionDistanceMatrix.txt umiCountFile.txt distanceMatrix.txt outputFile.txt fileModifier comparison

How to get help running the program:
python3 objectiveFunction,py -h

Output:
2 files will be outputted. One will have the name that you inputted as the output file name. This will give you a file containing per gene the gene name, log base 10 scaled output value, and raw objective function value. The other will have your file modifier + 'LHSAndRHSValues.txt' which tells you what the values of the right and left sides of the objective function is for your dataset.
An example of the log + raw output is M1TestRun.txt. An example of LHS and RHS output is M1TestRunEndLHSAndRHSValues.txt.

A small example using the test input files:
python3 objectiveFunction.py miniModuleGenes.txt coexpressionExampleInput.txt miniUMIInputFile.txt miniSeuratOutput.csv miniOutput.txt mini 0
This will give you nan for the right hand side, because there are not enough cells in the miniSeuratOutput.csv, but it can serve as a proof that the function is running.


seurat_process.R: This is used to produce the cell by cell distance matrix. run R and seurat_process.R.
